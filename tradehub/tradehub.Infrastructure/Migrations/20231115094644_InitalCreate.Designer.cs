// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tradehub.Infrastructure;

#nullable disable

namespace tradehub.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231115094644_InitalCreate")]
    partial class InitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tradehub.Domain.Model.BuyCar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuyedOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuyCars");
                });

            modelBuilder.Entity("tradehub.Domain.Model.BuyoutCar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuyedOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Profit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BuyoutCars");
                });

            modelBuilder.Entity("tradehub.Domain.Model.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuyCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuyoutCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DDSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrepareCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SaleCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyCarId");

                    b.HasIndex("BuyoutCarId");

                    b.HasIndex("DDSId");

                    b.HasIndex("JobId");

                    b.HasIndex("PrepareCarId");

                    b.HasIndex("SaleCarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("tradehub.Domain.Model.DDS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("BuyCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProfit")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrepareCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SaleCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyCarId");

                    b.HasIndex("PrepareCarId");

                    b.HasIndex("SaleCarId");

                    b.ToTable("DDSs");
                });

            modelBuilder.Entity("tradehub.Domain.Model.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuyCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuyoutCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrepareCarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<Guid?>("SaleCarId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuyCarId");

                    b.HasIndex("BuyoutCarId");

                    b.HasIndex("JobId");

                    b.HasIndex("PrepareCarId");

                    b.HasIndex("SaleCarId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("tradehub.Domain.Model.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("tradehub.Domain.Model.PrepareCar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PrepareCars");
                });

            modelBuilder.Entity("tradehub.Domain.Model.SaleCar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SaleCars");
                });

            modelBuilder.Entity("tradehub.Domain.Model.Car", b =>
                {
                    b.HasOne("tradehub.Domain.Model.BuyCar", null)
                        .WithMany("Cars")
                        .HasForeignKey("BuyCarId");

                    b.HasOne("tradehub.Domain.Model.BuyoutCar", null)
                        .WithMany("Cars")
                        .HasForeignKey("BuyoutCarId");

                    b.HasOne("tradehub.Domain.Model.DDS", null)
                        .WithMany("Cars")
                        .HasForeignKey("DDSId");

                    b.HasOne("tradehub.Domain.Model.Job", null)
                        .WithMany("Cars")
                        .HasForeignKey("JobId");

                    b.HasOne("tradehub.Domain.Model.PrepareCar", null)
                        .WithMany("Cars")
                        .HasForeignKey("PrepareCarId");

                    b.HasOne("tradehub.Domain.Model.SaleCar", null)
                        .WithMany("Cars")
                        .HasForeignKey("SaleCarId");
                });

            modelBuilder.Entity("tradehub.Domain.Model.DDS", b =>
                {
                    b.HasOne("tradehub.Domain.Model.BuyCar", null)
                        .WithMany("BuyRow")
                        .HasForeignKey("BuyCarId");

                    b.HasOne("tradehub.Domain.Model.PrepareCar", null)
                        .WithMany("PrepareRow")
                        .HasForeignKey("PrepareCarId");

                    b.HasOne("tradehub.Domain.Model.SaleCar", null)
                        .WithMany("BuyRow")
                        .HasForeignKey("SaleCarId");
                });

            modelBuilder.Entity("tradehub.Domain.Model.Employee", b =>
                {
                    b.HasOne("tradehub.Domain.Model.BuyCar", null)
                        .WithMany("Employees")
                        .HasForeignKey("BuyCarId");

                    b.HasOne("tradehub.Domain.Model.BuyoutCar", null)
                        .WithMany("Employees")
                        .HasForeignKey("BuyoutCarId");

                    b.HasOne("tradehub.Domain.Model.Job", null)
                        .WithMany("Employees")
                        .HasForeignKey("JobId");

                    b.HasOne("tradehub.Domain.Model.PrepareCar", null)
                        .WithMany("Employees")
                        .HasForeignKey("PrepareCarId");

                    b.HasOne("tradehub.Domain.Model.SaleCar", null)
                        .WithMany("Employees")
                        .HasForeignKey("SaleCarId");
                });

            modelBuilder.Entity("tradehub.Domain.Model.BuyCar", b =>
                {
                    b.Navigation("BuyRow");

                    b.Navigation("Cars");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("tradehub.Domain.Model.BuyoutCar", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("tradehub.Domain.Model.DDS", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("tradehub.Domain.Model.Job", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("tradehub.Domain.Model.PrepareCar", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Employees");

                    b.Navigation("PrepareRow");
                });

            modelBuilder.Entity("tradehub.Domain.Model.SaleCar", b =>
                {
                    b.Navigation("BuyRow");

                    b.Navigation("Cars");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
